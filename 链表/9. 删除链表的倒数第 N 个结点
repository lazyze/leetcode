/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* pro = new ListNode;
        pro->next = head;
        ListNode* slow = pro;
        ListNode* quick = pro;
        //注意此处遍历n+1次，循环中quick是否会等于nullptr
        for (int i = 1; i <= n + 1; i++) {
            quick = quick->next;
        }
        while (quick) {
            quick = quick->next;
            slow = slow->next;
        }
        slow->next = slow->next->next;
        return pro->next;
    }
};